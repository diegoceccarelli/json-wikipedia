/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package it.cnr.isti.hpc.wikipedia.article;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Article extends org.apache.avro.specific.SpecificRecordBase
    implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2117345136602437619L;
  public static final org.apache.avro.Schema SCHEMA$ =
      new org.apache.avro.Schema.Parser()
          .parse(
              "{\"type\":\"record\",\"name\":\"AvroArticle\",\"namespace\":\"it.cnr.isti.hpc.wikipedia.article\",\"fields\":[{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"wikiTitle\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"wid\",\"type\":\"int\"},{\"name\":\"integerNamespace\",\"type\":\"int\"},{\"name\":\"lang\",\"type\":{\"type\":\"enum\",\"name\":\"Language\",\"symbols\":[\"EN\",\"IT\"]}},{\"name\":\"namespace\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"enWikiTitle\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"redirect\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paragraphs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"sections\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"highlights\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"templatesSchema\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"links\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Link\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"anchor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"start\",\"type\":\"int\",\"doc\":\"where the anchor starts in the text\"},{\"name\":\"end\",\"type\":\"int\",\"doc\":\"where the anchor ends in the text\"},{\"name\":\"paragraphId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a paragraph, the item in the list\",\"default\":null},{\"name\":\"listId\",\"type\":[\"null\",\"int\"],\"doc\":\" if it occurs in a list, the ordinal of the list among all the lists\",\"default\":null},{\"name\":\"listItem\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a  list, the item in the list\",\"default\":null},{\"name\":\"tableId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a table, the ordinal of the table among all the tables\",\"default\":null},{\"name\":\"rowId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a table, the ordinal of the row\",\"default\":null},{\"name\":\"columnId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a table, the ordinal of the column\",\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"LinkType\",\"symbols\":[\"BODY\",\"TABLE\",\"LIST\",\"IMAGE\",\"UNKNOWN\",\"CATEGORY\"]}}]}},\"default\":[]},{\"name\":\"externalLinks\",\"type\":{\"type\":\"array\",\"items\":\"Link\"},\"default\":[]},{\"name\":\"categories\",\"type\":{\"type\":\"array\",\"items\":\"Link\"},\"default\":[]},{\"name\":\"images\",\"type\":{\"type\":\"array\",\"items\":\"Link\"},\"default\":[]},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"ArticleType\",\"symbols\":[\"TEMPLATE\",\"ARTICLE\",\"CATEGORY\",\"REDIRECT\",\"DISAMBIGUATION\",\"UNKNOWN\",\"MAIN\",\"LIST\",\"PROJECT\",\"FILE\"]}},{\"name\":\"tables\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Table\",\"fields\":[{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"numCols\",\"type\":\"int\",\"default\":0},{\"name\":\"numRows\",\"type\":\"int\",\"default\":0},{\"name\":\"table\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}}]}},\"default\":[]},{\"name\":\"lists\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},\"default\":[]},{\"name\":\"infobox\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Template\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"description\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}],\"default\":null},{\"name\":\"templates\",\"type\":{\"type\":\"array\",\"items\":\"Template\"},\"default\":[]}]}");

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  @Deprecated public java.lang.String title;
  @Deprecated public java.lang.String wikiTitle;
  @Deprecated public int wid;
  @Deprecated public int integerNamespace;
  @Deprecated public it.cnr.isti.hpc.wikipedia.article.Language lang;
  @Deprecated public java.lang.String namespace;
  @Deprecated public java.lang.String timestamp;
  @Deprecated public java.lang.String enWikiTitle;
  @Deprecated public java.lang.String redirect;
  @Deprecated public java.util.List<java.lang.String> paragraphs;
  @Deprecated public java.util.List<java.lang.String> sections;
  @Deprecated public java.util.List<java.lang.String> highlights;
  @Deprecated public java.util.List<java.lang.String> templatesSchema;
  @Deprecated public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> links;
  @Deprecated public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> externalLinks;
  @Deprecated public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> categories;
  @Deprecated public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> images;
  @Deprecated public it.cnr.isti.hpc.wikipedia.article.ArticleType type;
  @Deprecated public java.util.List<it.cnr.isti.hpc.wikipedia.article.Table> tables;
  @Deprecated public java.util.List<java.util.List<java.lang.String>> lists;
  @Deprecated public it.cnr.isti.hpc.wikipedia.article.Template infobox;
  @Deprecated public java.util.List<it.cnr.isti.hpc.wikipedia.article.Template> templates;

  /**
   * Default constructor. Note that this does not initialize fields to their default values from the
   * schema. If that is desired then one should use <code>newBuilder()</code>.
   */
  public Article() {}

  /**
   * All-args constructor.
   *
   * @param title The new value for title
   * @param wikiTitle The new value for wikiTitle
   * @param wid The new value for wid
   * @param integerNamespace The new value for integerNamespace
   * @param lang The new value for lang
   * @param namespace The new value for namespace
   * @param timestamp The new value for timestamp
   * @param enWikiTitle The new value for enWikiTitle
   * @param redirect The new value for redirect
   * @param paragraphs The new value for paragraphs
   * @param sections The new value for sections
   * @param highlights The new value for highlights
   * @param templatesSchema The new value for templatesSchema
   * @param links The new value for links
   * @param externalLinks The new value for externalLinks
   * @param categories The new value for categories
   * @param images The new value for images
   * @param type The new value for type
   * @param tables The new value for tables
   * @param lists The new value for lists
   * @param infobox The new value for infobox
   * @param templates The new value for templates
   */
  public Article(
      java.lang.String title,
      java.lang.String wikiTitle,
      java.lang.Integer wid,
      java.lang.Integer integerNamespace,
      it.cnr.isti.hpc.wikipedia.article.Language lang,
      java.lang.String namespace,
      java.lang.String timestamp,
      java.lang.String enWikiTitle,
      java.lang.String redirect,
      java.util.List<java.lang.String> paragraphs,
      java.util.List<java.lang.String> sections,
      java.util.List<java.lang.String> highlights,
      java.util.List<java.lang.String> templatesSchema,
      java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> links,
      java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> externalLinks,
      java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> categories,
      java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> images,
      it.cnr.isti.hpc.wikipedia.article.ArticleType type,
      java.util.List<it.cnr.isti.hpc.wikipedia.article.Table> tables,
      java.util.List<java.util.List<java.lang.String>> lists,
      it.cnr.isti.hpc.wikipedia.article.Template infobox,
      java.util.List<it.cnr.isti.hpc.wikipedia.article.Template> templates) {
    this.title = title;
    this.wikiTitle = wikiTitle;
    this.wid = wid;
    this.integerNamespace = integerNamespace;
    this.lang = lang;
    this.namespace = namespace;
    this.timestamp = timestamp;
    this.enWikiTitle = enWikiTitle;
    this.redirect = redirect;
    this.paragraphs = paragraphs;
    this.sections = sections;
    this.highlights = highlights;
    this.templatesSchema = templatesSchema;
    this.links = links;
    this.externalLinks = externalLinks;
    this.categories = categories;
    this.images = images;
    this.type = type;
    this.tables = tables;
    this.lists = lists;
    this.infobox = infobox;
    this.templates = templates;
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return title;
      case 1:
        return wikiTitle;
      case 2:
        return wid;
      case 3:
        return integerNamespace;
      case 4:
        return lang;
      case 5:
        return namespace;
      case 6:
        return timestamp;
      case 7:
        return enWikiTitle;
      case 8:
        return redirect;
      case 9:
        return paragraphs;
      case 10:
        return sections;
      case 11:
        return highlights;
      case 12:
        return templatesSchema;
      case 13:
        return links;
      case 14:
        return externalLinks;
      case 15:
        return categories;
      case 16:
        return images;
      case 17:
        return type;
      case 18:
        return tables;
      case 19:
        return lists;
      case 20:
        return infobox;
      case 21:
        return templates;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        title = (java.lang.String) value$;
        break;
      case 1:
        wikiTitle = (java.lang.String) value$;
        break;
      case 2:
        wid = (java.lang.Integer) value$;
        break;
      case 3:
        integerNamespace = (java.lang.Integer) value$;
        break;
      case 4:
        lang = (it.cnr.isti.hpc.wikipedia.article.Language) value$;
        break;
      case 5:
        namespace = (java.lang.String) value$;
        break;
      case 6:
        timestamp = (java.lang.String) value$;
        break;
      case 7:
        enWikiTitle = (java.lang.String) value$;
        break;
      case 8:
        redirect = (java.lang.String) value$;
        break;
      case 9:
        paragraphs = (java.util.List<java.lang.String>) value$;
        break;
      case 10:
        sections = (java.util.List<java.lang.String>) value$;
        break;
      case 11:
        highlights = (java.util.List<java.lang.String>) value$;
        break;
      case 12:
        templatesSchema = (java.util.List<java.lang.String>) value$;
        break;
      case 13:
        links = (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>) value$;
        break;
      case 14:
        externalLinks = (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>) value$;
        break;
      case 15:
        categories = (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>) value$;
        break;
      case 16:
        images = (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>) value$;
        break;
      case 17:
        type = (it.cnr.isti.hpc.wikipedia.article.ArticleType) value$;
        break;
      case 18:
        tables = (java.util.List<it.cnr.isti.hpc.wikipedia.article.Table>) value$;
        break;
      case 19:
        lists = (java.util.List<java.util.List<java.lang.String>>) value$;
        break;
      case 20:
        infobox = (it.cnr.isti.hpc.wikipedia.article.Template) value$;
        break;
      case 21:
        templates = (java.util.List<it.cnr.isti.hpc.wikipedia.article.Template>) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'title' field.
   *
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   *
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'wikiTitle' field.
   *
   * @return The value of the 'wikiTitle' field.
   */
  public java.lang.String getWikiTitle() {
    return wikiTitle;
  }

  /**
   * Sets the value of the 'wikiTitle' field.
   *
   * @param value the value to set.
   */
  public void setWikiTitle(java.lang.String value) {
    this.wikiTitle = value;
  }

  /**
   * Gets the value of the 'wid' field.
   *
   * @return The value of the 'wid' field.
   */
  public java.lang.Integer getWid() {
    return wid;
  }

  /**
   * Sets the value of the 'wid' field.
   *
   * @param value the value to set.
   */
  public void setWid(java.lang.Integer value) {
    this.wid = value;
  }

  /**
   * Gets the value of the 'integerNamespace' field.
   *
   * @return The value of the 'integerNamespace' field.
   */
  public java.lang.Integer getIntegerNamespace() {
    return integerNamespace;
  }

  /**
   * Sets the value of the 'integerNamespace' field.
   *
   * @param value the value to set.
   */
  public void setIntegerNamespace(java.lang.Integer value) {
    this.integerNamespace = value;
  }

  /**
   * Gets the value of the 'lang' field.
   *
   * @return The value of the 'lang' field.
   */
  public it.cnr.isti.hpc.wikipedia.article.Language getLang() {
    return lang;
  }

  /**
   * Sets the value of the 'lang' field.
   *
   * @param value the value to set.
   */
  public void setLang(it.cnr.isti.hpc.wikipedia.article.Language value) {
    this.lang = value;
  }

  /**
   * Gets the value of the 'namespace' field.
   *
   * @return The value of the 'namespace' field.
   */
  public java.lang.String getNamespace() {
    return namespace;
  }

  /**
   * Sets the value of the 'namespace' field.
   *
   * @param value the value to set.
   */
  public void setNamespace(java.lang.String value) {
    this.namespace = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   *
   * @return The value of the 'timestamp' field.
   */
  public java.lang.String getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   *
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.String value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'enWikiTitle' field.
   *
   * @return The value of the 'enWikiTitle' field.
   */
  public java.lang.String getEnWikiTitle() {
    return enWikiTitle;
  }

  /**
   * Sets the value of the 'enWikiTitle' field.
   *
   * @param value the value to set.
   */
  public void setEnWikiTitle(java.lang.String value) {
    this.enWikiTitle = value;
  }

  /**
   * Gets the value of the 'redirect' field.
   *
   * @return The value of the 'redirect' field.
   */
  public java.lang.String getRedirect() {
    return redirect;
  }

  /**
   * Sets the value of the 'redirect' field.
   *
   * @param value the value to set.
   */
  public void setRedirect(java.lang.String value) {
    this.redirect = value;
  }

  /**
   * Gets the value of the 'paragraphs' field.
   *
   * @return The value of the 'paragraphs' field.
   */
  public java.util.List<java.lang.String> getParagraphs() {
    return paragraphs;
  }

  /**
   * Sets the value of the 'paragraphs' field.
   *
   * @param value the value to set.
   */
  public void setParagraphs(java.util.List<java.lang.String> value) {
    this.paragraphs = value;
  }

  /**
   * Gets the value of the 'sections' field.
   *
   * @return The value of the 'sections' field.
   */
  public java.util.List<java.lang.String> getSections() {
    return sections;
  }

  /**
   * Sets the value of the 'sections' field.
   *
   * @param value the value to set.
   */
  public void setSections(java.util.List<java.lang.String> value) {
    this.sections = value;
  }

  /**
   * Gets the value of the 'highlights' field.
   *
   * @return The value of the 'highlights' field.
   */
  public java.util.List<java.lang.String> getHighlights() {
    return highlights;
  }

  /**
   * Sets the value of the 'highlights' field.
   *
   * @param value the value to set.
   */
  public void setHighlights(java.util.List<java.lang.String> value) {
    this.highlights = value;
  }

  /**
   * Gets the value of the 'templatesSchema' field.
   *
   * @return The value of the 'templatesSchema' field.
   */
  public java.util.List<java.lang.String> getTemplatesSchema() {
    return templatesSchema;
  }

  /**
   * Sets the value of the 'templatesSchema' field.
   *
   * @param value the value to set.
   */
  public void setTemplatesSchema(java.util.List<java.lang.String> value) {
    this.templatesSchema = value;
  }

  /**
   * Gets the value of the 'links' field.
   *
   * @return The value of the 'links' field.
   */
  public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getLinks() {
    return links;
  }

  /**
   * Sets the value of the 'links' field.
   *
   * @param value the value to set.
   */
  public void setLinks(java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
    this.links = value;
  }

  /**
   * Gets the value of the 'externalLinks' field.
   *
   * @return The value of the 'externalLinks' field.
   */
  public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getExternalLinks() {
    return externalLinks;
  }

  /**
   * Sets the value of the 'externalLinks' field.
   *
   * @param value the value to set.
   */
  public void setExternalLinks(java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
    this.externalLinks = value;
  }

  /**
   * Gets the value of the 'categories' field.
   *
   * @return The value of the 'categories' field.
   */
  public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getCategories() {
    return categories;
  }

  /**
   * Sets the value of the 'categories' field.
   *
   * @param value the value to set.
   */
  public void setCategories(java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
    this.categories = value;
  }

  /**
   * Gets the value of the 'images' field.
   *
   * @return The value of the 'images' field.
   */
  public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getImages() {
    return images;
  }

  /**
   * Sets the value of the 'images' field.
   *
   * @param value the value to set.
   */
  public void setImages(java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
    this.images = value;
  }

  /**
   * Gets the value of the 'type' field.
   *
   * @return The value of the 'type' field.
   */
  public it.cnr.isti.hpc.wikipedia.article.ArticleType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   *
   * @param value the value to set.
   */
  public void setType(it.cnr.isti.hpc.wikipedia.article.ArticleType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'tables' field.
   *
   * @return The value of the 'tables' field.
   */
  public java.util.List<it.cnr.isti.hpc.wikipedia.article.Table> getTables() {
    return tables;
  }

  /**
   * Sets the value of the 'tables' field.
   *
   * @param value the value to set.
   */
  public void setTables(java.util.List<it.cnr.isti.hpc.wikipedia.article.Table> value) {
    this.tables = value;
  }

  /**
   * Gets the value of the 'lists' field.
   *
   * @return The value of the 'lists' field.
   */
  public java.util.List<java.util.List<java.lang.String>> getLists() {
    return lists;
  }

  /**
   * Sets the value of the 'lists' field.
   *
   * @param value the value to set.
   */
  public void setLists(java.util.List<java.util.List<java.lang.String>> value) {
    this.lists = value;
  }

  /**
   * Gets the value of the 'infobox' field.
   *
   * @return The value of the 'infobox' field.
   */
  public it.cnr.isti.hpc.wikipedia.article.Template getInfobox() {
    return infobox;
  }

  /**
   * Sets the value of the 'infobox' field.
   *
   * @param value the value to set.
   */
  public void setInfobox(it.cnr.isti.hpc.wikipedia.article.Template value) {
    this.infobox = value;
  }

  /**
   * Gets the value of the 'templates' field.
   *
   * @return The value of the 'templates' field.
   */
  public java.util.List<it.cnr.isti.hpc.wikipedia.article.Template> getTemplates() {
    return templates;
  }

  /**
   * Sets the value of the 'templates' field.
   *
   * @param value the value to set.
   */
  public void setTemplates(java.util.List<it.cnr.isti.hpc.wikipedia.article.Template> value) {
    this.templates = value;
  }

  /**
   * Creates a new AvroArticle RecordBuilder.
   *
   * @return A new AvroArticle RecordBuilder
   */
  public static Article.Builder newBuilder() {
    return new Article.Builder();
  }

  /**
   * Creates a new AvroArticle RecordBuilder by copying an existing Builder.
   *
   * @param other The existing builder to copy.
   * @return A new AvroArticle RecordBuilder
   */
  public static Article.Builder newBuilder(Article.Builder other) {
    return new Article.Builder(other);
  }

  /**
   * Creates a new AvroArticle RecordBuilder by copying an existing AvroArticle instance.
   *
   * @param other The existing instance to copy.
   * @return A new AvroArticle RecordBuilder
   */
  public static Article.Builder newBuilder(Article other) {
    return new Article.Builder(other);
  }

  /** RecordBuilder for AvroArticle instances. */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Article>
      implements org.apache.avro.data.RecordBuilder<Article> {

    private java.lang.String title;
    private java.lang.String wikiTitle;
    private int wid;
    private int integerNamespace;
    private it.cnr.isti.hpc.wikipedia.article.Language lang;
    private java.lang.String namespace;
    private java.lang.String timestamp;
    private java.lang.String enWikiTitle;
    private java.lang.String redirect;
    private java.util.List<java.lang.String> paragraphs;
    private java.util.List<java.lang.String> sections;
    private java.util.List<java.lang.String> highlights;
    private java.util.List<java.lang.String> templatesSchema;
    private java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> links;
    private java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> externalLinks;
    private java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> categories;
    private java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> images;
    private it.cnr.isti.hpc.wikipedia.article.ArticleType type;
    private java.util.List<it.cnr.isti.hpc.wikipedia.article.Table> tables;
    private java.util.List<java.util.List<java.lang.String>> lists;
    private it.cnr.isti.hpc.wikipedia.article.Template infobox;
    private it.cnr.isti.hpc.wikipedia.article.Template.Builder infoboxBuilder;
    private java.util.List<it.cnr.isti.hpc.wikipedia.article.Template> templates;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     *
     * @param other The existing Builder to copy.
     */
    private Builder(Article.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wikiTitle)) {
        this.wikiTitle = data().deepCopy(fields()[1].schema(), other.wikiTitle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.wid)) {
        this.wid = data().deepCopy(fields()[2].schema(), other.wid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.integerNamespace)) {
        this.integerNamespace = data().deepCopy(fields()[3].schema(), other.integerNamespace);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lang)) {
        this.lang = data().deepCopy(fields()[4].schema(), other.lang);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.namespace)) {
        this.namespace = data().deepCopy(fields()[5].schema(), other.namespace);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.enWikiTitle)) {
        this.enWikiTitle = data().deepCopy(fields()[7].schema(), other.enWikiTitle);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.redirect)) {
        this.redirect = data().deepCopy(fields()[8].schema(), other.redirect);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.paragraphs)) {
        this.paragraphs = data().deepCopy(fields()[9].schema(), other.paragraphs);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.sections)) {
        this.sections = data().deepCopy(fields()[10].schema(), other.sections);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.highlights)) {
        this.highlights = data().deepCopy(fields()[11].schema(), other.highlights);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.templatesSchema)) {
        this.templatesSchema = data().deepCopy(fields()[12].schema(), other.templatesSchema);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.links)) {
        this.links = data().deepCopy(fields()[13].schema(), other.links);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.externalLinks)) {
        this.externalLinks = data().deepCopy(fields()[14].schema(), other.externalLinks);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.categories)) {
        this.categories = data().deepCopy(fields()[15].schema(), other.categories);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.images)) {
        this.images = data().deepCopy(fields()[16].schema(), other.images);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.type)) {
        this.type = data().deepCopy(fields()[17].schema(), other.type);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.tables)) {
        this.tables = data().deepCopy(fields()[18].schema(), other.tables);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.lists)) {
        this.lists = data().deepCopy(fields()[19].schema(), other.lists);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.infobox)) {
        this.infobox = data().deepCopy(fields()[20].schema(), other.infobox);
        fieldSetFlags()[20] = true;
      }
      if (other.hasInfoboxBuilder()) {
        this.infoboxBuilder =
            it.cnr.isti.hpc.wikipedia.article.Template.newBuilder(other.getInfoboxBuilder());
      }
      if (isValidValue(fields()[21], other.templates)) {
        this.templates = data().deepCopy(fields()[21].schema(), other.templates);
        fieldSetFlags()[21] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroArticle instance
     *
     * @param other The existing instance to copy.
     */
    private Builder(Article other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wikiTitle)) {
        this.wikiTitle = data().deepCopy(fields()[1].schema(), other.wikiTitle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.wid)) {
        this.wid = data().deepCopy(fields()[2].schema(), other.wid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.integerNamespace)) {
        this.integerNamespace = data().deepCopy(fields()[3].schema(), other.integerNamespace);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lang)) {
        this.lang = data().deepCopy(fields()[4].schema(), other.lang);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.namespace)) {
        this.namespace = data().deepCopy(fields()[5].schema(), other.namespace);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.enWikiTitle)) {
        this.enWikiTitle = data().deepCopy(fields()[7].schema(), other.enWikiTitle);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.redirect)) {
        this.redirect = data().deepCopy(fields()[8].schema(), other.redirect);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.paragraphs)) {
        this.paragraphs = data().deepCopy(fields()[9].schema(), other.paragraphs);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.sections)) {
        this.sections = data().deepCopy(fields()[10].schema(), other.sections);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.highlights)) {
        this.highlights = data().deepCopy(fields()[11].schema(), other.highlights);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.templatesSchema)) {
        this.templatesSchema = data().deepCopy(fields()[12].schema(), other.templatesSchema);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.links)) {
        this.links = data().deepCopy(fields()[13].schema(), other.links);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.externalLinks)) {
        this.externalLinks = data().deepCopy(fields()[14].schema(), other.externalLinks);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.categories)) {
        this.categories = data().deepCopy(fields()[15].schema(), other.categories);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.images)) {
        this.images = data().deepCopy(fields()[16].schema(), other.images);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.type)) {
        this.type = data().deepCopy(fields()[17].schema(), other.type);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.tables)) {
        this.tables = data().deepCopy(fields()[18].schema(), other.tables);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.lists)) {
        this.lists = data().deepCopy(fields()[19].schema(), other.lists);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.infobox)) {
        this.infobox = data().deepCopy(fields()[20].schema(), other.infobox);
        fieldSetFlags()[20] = true;
      }
      this.infoboxBuilder = null;
      if (isValidValue(fields()[21], other.templates)) {
        this.templates = data().deepCopy(fields()[21].schema(), other.templates);
        fieldSetFlags()[21] = true;
      }
    }

    /**
     * Gets the value of the 'title' field.
     *
     * @return The value.
     */
    public java.lang.String getTitle() {
      return title;
    }

    /**
     * Sets the value of the 'title' field.
     *
     * @param value The value of 'title'.
     * @return This builder.
     */
    public Article.Builder setTitle(java.lang.String value) {
      validate(fields()[0], value);
      this.title = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'title' field has been set.
     *
     * @return True if the 'title' field has been set, false otherwise.
     */
    public boolean hasTitle() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'title' field.
     *
     * @return This builder.
     */
    public Article.Builder clearTitle() {
      title = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'wikiTitle' field.
     *
     * @return The value.
     */
    public java.lang.String getWikiTitle() {
      return wikiTitle;
    }

    /**
     * Sets the value of the 'wikiTitle' field.
     *
     * @param value The value of 'wikiTitle'.
     * @return This builder.
     */
    public Article.Builder setWikiTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.wikiTitle = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'wikiTitle' field has been set.
     *
     * @return True if the 'wikiTitle' field has been set, false otherwise.
     */
    public boolean hasWikiTitle() {
      return fieldSetFlags()[1];
    }

    /**
     * Clears the value of the 'wikiTitle' field.
     *
     * @return This builder.
     */
    public Article.Builder clearWikiTitle() {
      wikiTitle = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'wid' field.
     *
     * @return The value.
     */
    public java.lang.Integer getWid() {
      return wid;
    }

    /**
     * Sets the value of the 'wid' field.
     *
     * @param value The value of 'wid'.
     * @return This builder.
     */
    public Article.Builder setWid(int value) {
      validate(fields()[2], value);
      this.wid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'wid' field has been set.
     *
     * @return True if the 'wid' field has been set, false otherwise.
     */
    public boolean hasWid() {
      return fieldSetFlags()[2];
    }

    /**
     * Clears the value of the 'wid' field.
     *
     * @return This builder.
     */
    public Article.Builder clearWid() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'integerNamespace' field.
     *
     * @return The value.
     */
    public java.lang.Integer getIntegerNamespace() {
      return integerNamespace;
    }

    /**
     * Sets the value of the 'integerNamespace' field.
     *
     * @param value The value of 'integerNamespace'.
     * @return This builder.
     */
    public Article.Builder setIntegerNamespace(int value) {
      validate(fields()[3], value);
      this.integerNamespace = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'integerNamespace' field has been set.
     *
     * @return True if the 'integerNamespace' field has been set, false otherwise.
     */
    public boolean hasIntegerNamespace() {
      return fieldSetFlags()[3];
    }

    /**
     * Clears the value of the 'integerNamespace' field.
     *
     * @return This builder.
     */
    public Article.Builder clearIntegerNamespace() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'lang' field.
     *
     * @return The value.
     */
    public it.cnr.isti.hpc.wikipedia.article.Language getLang() {
      return lang;
    }

    /**
     * Sets the value of the 'lang' field.
     *
     * @param value The value of 'lang'.
     * @return This builder.
     */
    public Article.Builder setLang(it.cnr.isti.hpc.wikipedia.article.Language value) {
      validate(fields()[4], value);
      this.lang = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'lang' field has been set.
     *
     * @return True if the 'lang' field has been set, false otherwise.
     */
    public boolean hasLang() {
      return fieldSetFlags()[4];
    }

    /**
     * Clears the value of the 'lang' field.
     *
     * @return This builder.
     */
    public Article.Builder clearLang() {
      lang = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
     * Gets the value of the 'namespace' field.
     *
     * @return The value.
     */
    public java.lang.String getNamespace() {
      return namespace;
    }

    /**
     * Sets the value of the 'namespace' field.
     *
     * @param value The value of 'namespace'.
     * @return This builder.
     */
    public Article.Builder setNamespace(java.lang.String value) {
      validate(fields()[5], value);
      this.namespace = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
     * Checks whether the 'namespace' field has been set.
     *
     * @return True if the 'namespace' field has been set, false otherwise.
     */
    public boolean hasNamespace() {
      return fieldSetFlags()[5];
    }

    /**
     * Clears the value of the 'namespace' field.
     *
     * @return This builder.
     */
    public Article.Builder clearNamespace() {
      namespace = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
     * Gets the value of the 'timestamp' field.
     *
     * @return The value.
     */
    public java.lang.String getTimestamp() {
      return timestamp;
    }

    /**
     * Sets the value of the 'timestamp' field.
     *
     * @param value The value of 'timestamp'.
     * @return This builder.
     */
    public Article.Builder setTimestamp(java.lang.String value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
     * Checks whether the 'timestamp' field has been set.
     *
     * @return True if the 'timestamp' field has been set, false otherwise.
     */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }

    /**
     * Clears the value of the 'timestamp' field.
     *
     * @return This builder.
     */
    public Article.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
     * Gets the value of the 'enWikiTitle' field.
     *
     * @return The value.
     */
    public java.lang.String getEnWikiTitle() {
      return enWikiTitle;
    }

    /**
     * Sets the value of the 'enWikiTitle' field.
     *
     * @param value The value of 'enWikiTitle'.
     * @return This builder.
     */
    public Article.Builder setEnWikiTitle(java.lang.String value) {
      validate(fields()[7], value);
      this.enWikiTitle = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
     * Checks whether the 'enWikiTitle' field has been set.
     *
     * @return True if the 'enWikiTitle' field has been set, false otherwise.
     */
    public boolean hasEnWikiTitle() {
      return fieldSetFlags()[7];
    }

    /**
     * Clears the value of the 'enWikiTitle' field.
     *
     * @return This builder.
     */
    public Article.Builder clearEnWikiTitle() {
      enWikiTitle = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
     * Gets the value of the 'redirect' field.
     *
     * @return The value.
     */
    public java.lang.String getRedirect() {
      return redirect;
    }

    /**
     * Sets the value of the 'redirect' field.
     *
     * @param value The value of 'redirect'.
     * @return This builder.
     */
    public Article.Builder setRedirect(java.lang.String value) {
      validate(fields()[8], value);
      this.redirect = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
     * Checks whether the 'redirect' field has been set.
     *
     * @return True if the 'redirect' field has been set, false otherwise.
     */
    public boolean hasRedirect() {
      return fieldSetFlags()[8];
    }

    /**
     * Clears the value of the 'redirect' field.
     *
     * @return This builder.
     */
    public Article.Builder clearRedirect() {
      redirect = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
     * Gets the value of the 'paragraphs' field.
     *
     * @return The value.
     */
    public java.util.List<java.lang.String> getParagraphs() {
      return paragraphs;
    }

    /**
     * Sets the value of the 'paragraphs' field.
     *
     * @param value The value of 'paragraphs'.
     * @return This builder.
     */
    public Article.Builder setParagraphs(java.util.List<java.lang.String> value) {
      validate(fields()[9], value);
      this.paragraphs = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
     * Checks whether the 'paragraphs' field has been set.
     *
     * @return True if the 'paragraphs' field has been set, false otherwise.
     */
    public boolean hasParagraphs() {
      return fieldSetFlags()[9];
    }

    /**
     * Clears the value of the 'paragraphs' field.
     *
     * @return This builder.
     */
    public Article.Builder clearParagraphs() {
      paragraphs = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
     * Gets the value of the 'sections' field.
     *
     * @return The value.
     */
    public java.util.List<java.lang.String> getSections() {
      return sections;
    }

    /**
     * Sets the value of the 'sections' field.
     *
     * @param value The value of 'sections'.
     * @return This builder.
     */
    public Article.Builder setSections(java.util.List<java.lang.String> value) {
      validate(fields()[10], value);
      this.sections = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
     * Checks whether the 'sections' field has been set.
     *
     * @return True if the 'sections' field has been set, false otherwise.
     */
    public boolean hasSections() {
      return fieldSetFlags()[10];
    }

    /**
     * Clears the value of the 'sections' field.
     *
     * @return This builder.
     */
    public Article.Builder clearSections() {
      sections = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
     * Gets the value of the 'highlights' field.
     *
     * @return The value.
     */
    public java.util.List<java.lang.String> getHighlights() {
      return highlights;
    }

    /**
     * Sets the value of the 'highlights' field.
     *
     * @param value The value of 'highlights'.
     * @return This builder.
     */
    public Article.Builder setHighlights(java.util.List<java.lang.String> value) {
      validate(fields()[11], value);
      this.highlights = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
     * Checks whether the 'highlights' field has been set.
     *
     * @return True if the 'highlights' field has been set, false otherwise.
     */
    public boolean hasHighlights() {
      return fieldSetFlags()[11];
    }

    /**
     * Clears the value of the 'highlights' field.
     *
     * @return This builder.
     */
    public Article.Builder clearHighlights() {
      highlights = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
     * Gets the value of the 'templatesSchema' field.
     *
     * @return The value.
     */
    public java.util.List<java.lang.String> getTemplatesSchema() {
      return templatesSchema;
    }

    /**
     * Sets the value of the 'templatesSchema' field.
     *
     * @param value The value of 'templatesSchema'.
     * @return This builder.
     */
    public Article.Builder setTemplatesSchema(java.util.List<java.lang.String> value) {
      validate(fields()[12], value);
      this.templatesSchema = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
     * Checks whether the 'templatesSchema' field has been set.
     *
     * @return True if the 'templatesSchema' field has been set, false otherwise.
     */
    public boolean hasTemplatesSchema() {
      return fieldSetFlags()[12];
    }

    /**
     * Clears the value of the 'templatesSchema' field.
     *
     * @return This builder.
     */
    public Article.Builder clearTemplatesSchema() {
      templatesSchema = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
     * Gets the value of the 'links' field.
     *
     * @return The value.
     */
    public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getLinks() {
      return links;
    }

    /**
     * Sets the value of the 'links' field.
     *
     * @param value The value of 'links'.
     * @return This builder.
     */
    public Article.Builder setLinks(java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
      validate(fields()[13], value);
      this.links = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
     * Checks whether the 'links' field has been set.
     *
     * @return True if the 'links' field has been set, false otherwise.
     */
    public boolean hasLinks() {
      return fieldSetFlags()[13];
    }

    /**
     * Clears the value of the 'links' field.
     *
     * @return This builder.
     */
    public Article.Builder clearLinks() {
      links = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
     * Gets the value of the 'externalLinks' field.
     *
     * @return The value.
     */
    public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getExternalLinks() {
      return externalLinks;
    }

    /**
     * Sets the value of the 'externalLinks' field.
     *
     * @param value The value of 'externalLinks'.
     * @return This builder.
     */
    public Article.Builder setExternalLinks(
        java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
      validate(fields()[14], value);
      this.externalLinks = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
     * Checks whether the 'externalLinks' field has been set.
     *
     * @return True if the 'externalLinks' field has been set, false otherwise.
     */
    public boolean hasExternalLinks() {
      return fieldSetFlags()[14];
    }

    /**
     * Clears the value of the 'externalLinks' field.
     *
     * @return This builder.
     */
    public Article.Builder clearExternalLinks() {
      externalLinks = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
     * Gets the value of the 'categories' field.
     *
     * @return The value.
     */
    public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getCategories() {
      return categories;
    }

    /**
     * Sets the value of the 'categories' field.
     *
     * @param value The value of 'categories'.
     * @return This builder.
     */
    public Article.Builder setCategories(
        java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
      validate(fields()[15], value);
      this.categories = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
     * Checks whether the 'categories' field has been set.
     *
     * @return True if the 'categories' field has been set, false otherwise.
     */
    public boolean hasCategories() {
      return fieldSetFlags()[15];
    }

    /**
     * Clears the value of the 'categories' field.
     *
     * @return This builder.
     */
    public Article.Builder clearCategories() {
      categories = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
     * Gets the value of the 'images' field.
     *
     * @return The value.
     */
    public java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> getImages() {
      return images;
    }

    /**
     * Sets the value of the 'images' field.
     *
     * @param value The value of 'images'.
     * @return This builder.
     */
    public Article.Builder setImages(java.util.List<it.cnr.isti.hpc.wikipedia.article.Link> value) {
      validate(fields()[16], value);
      this.images = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
     * Checks whether the 'images' field has been set.
     *
     * @return True if the 'images' field has been set, false otherwise.
     */
    public boolean hasImages() {
      return fieldSetFlags()[16];
    }

    /**
     * Clears the value of the 'images' field.
     *
     * @return This builder.
     */
    public Article.Builder clearImages() {
      images = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
     * Gets the value of the 'type' field.
     *
     * @return The value.
     */
    public it.cnr.isti.hpc.wikipedia.article.ArticleType getType() {
      return type;
    }

    /**
     * Sets the value of the 'type' field.
     *
     * @param value The value of 'type'.
     * @return This builder.
     */
    public Article.Builder setType(it.cnr.isti.hpc.wikipedia.article.ArticleType value) {
      validate(fields()[17], value);
      this.type = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
     * Checks whether the 'type' field has been set.
     *
     * @return True if the 'type' field has been set, false otherwise.
     */
    public boolean hasType() {
      return fieldSetFlags()[17];
    }

    /**
     * Clears the value of the 'type' field.
     *
     * @return This builder.
     */
    public Article.Builder clearType() {
      type = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
     * Gets the value of the 'tables' field.
     *
     * @return The value.
     */
    public java.util.List<it.cnr.isti.hpc.wikipedia.article.Table> getTables() {
      return tables;
    }

    /**
     * Sets the value of the 'tables' field.
     *
     * @param value The value of 'tables'.
     * @return This builder.
     */
    public Article.Builder setTables(
        java.util.List<it.cnr.isti.hpc.wikipedia.article.Table> value) {
      validate(fields()[18], value);
      this.tables = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
     * Checks whether the 'tables' field has been set.
     *
     * @return True if the 'tables' field has been set, false otherwise.
     */
    public boolean hasTables() {
      return fieldSetFlags()[18];
    }

    /**
     * Clears the value of the 'tables' field.
     *
     * @return This builder.
     */
    public Article.Builder clearTables() {
      tables = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
     * Gets the value of the 'lists' field.
     *
     * @return The value.
     */
    public java.util.List<java.util.List<java.lang.String>> getLists() {
      return lists;
    }

    /**
     * Sets the value of the 'lists' field.
     *
     * @param value The value of 'lists'.
     * @return This builder.
     */
    public Article.Builder setLists(java.util.List<java.util.List<java.lang.String>> value) {
      validate(fields()[19], value);
      this.lists = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
     * Checks whether the 'lists' field has been set.
     *
     * @return True if the 'lists' field has been set, false otherwise.
     */
    public boolean hasLists() {
      return fieldSetFlags()[19];
    }

    /**
     * Clears the value of the 'lists' field.
     *
     * @return This builder.
     */
    public Article.Builder clearLists() {
      lists = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
     * Gets the value of the 'infobox' field.
     *
     * @return The value.
     */
    public it.cnr.isti.hpc.wikipedia.article.Template getInfobox() {
      return infobox;
    }

    /**
     * Sets the value of the 'infobox' field.
     *
     * @param value The value of 'infobox'.
     * @return This builder.
     */
    public Article.Builder setInfobox(it.cnr.isti.hpc.wikipedia.article.Template value) {
      validate(fields()[20], value);
      this.infoboxBuilder = null;
      this.infobox = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
     * Checks whether the 'infobox' field has been set.
     *
     * @return True if the 'infobox' field has been set, false otherwise.
     */
    public boolean hasInfobox() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'infobox' field and creates one if it doesn't exist yet.
     *
     * @return This builder.
     */
    public it.cnr.isti.hpc.wikipedia.article.Template.Builder getInfoboxBuilder() {
      if (infoboxBuilder == null) {
        if (hasInfobox()) {
          setInfoboxBuilder(it.cnr.isti.hpc.wikipedia.article.Template.newBuilder(infobox));
        } else {
          setInfoboxBuilder(it.cnr.isti.hpc.wikipedia.article.Template.newBuilder());
        }
      }
      return infoboxBuilder;
    }

    /**
     * Sets the Builder instance for the 'infobox' field
     *
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Article.Builder setInfoboxBuilder(
        it.cnr.isti.hpc.wikipedia.article.Template.Builder value) {
      clearInfobox();
      infoboxBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'infobox' field has an active Builder instance
     *
     * @return True if the 'infobox' field has an active Builder instance
     */
    public boolean hasInfoboxBuilder() {
      return infoboxBuilder != null;
    }

    /**
     * Clears the value of the 'infobox' field.
     *
     * @return This builder.
     */
    public Article.Builder clearInfobox() {
      infobox = null;
      infoboxBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
     * Gets the value of the 'templates' field.
     *
     * @return The value.
     */
    public java.util.List<it.cnr.isti.hpc.wikipedia.article.Template> getTemplates() {
      return templates;
    }

    /**
     * Sets the value of the 'templates' field.
     *
     * @param value The value of 'templates'.
     * @return This builder.
     */
    public Article.Builder setTemplates(
        java.util.List<it.cnr.isti.hpc.wikipedia.article.Template> value) {
      validate(fields()[21], value);
      this.templates = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
     * Checks whether the 'templates' field has been set.
     *
     * @return True if the 'templates' field has been set, false otherwise.
     */
    public boolean hasTemplates() {
      return fieldSetFlags()[21];
    }

    /**
     * Clears the value of the 'templates' field.
     *
     * @return This builder.
     */
    public Article.Builder clearTemplates() {
      templates = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    public Article build() {
      try {
        Article record = new Article();
        record.title =
            fieldSetFlags()[0] ? this.title : (java.lang.String) defaultValue(fields()[0]);
        record.wikiTitle =
            fieldSetFlags()[1] ? this.wikiTitle : (java.lang.String) defaultValue(fields()[1]);
        record.wid = fieldSetFlags()[2] ? this.wid : (java.lang.Integer) defaultValue(fields()[2]);
        record.integerNamespace =
            fieldSetFlags()[3]
                ? this.integerNamespace
                : (java.lang.Integer) defaultValue(fields()[3]);
        record.lang =
            fieldSetFlags()[4]
                ? this.lang
                : (it.cnr.isti.hpc.wikipedia.article.Language) defaultValue(fields()[4]);
        record.namespace =
            fieldSetFlags()[5] ? this.namespace : (java.lang.String) defaultValue(fields()[5]);
        record.timestamp =
            fieldSetFlags()[6] ? this.timestamp : (java.lang.String) defaultValue(fields()[6]);
        record.enWikiTitle =
            fieldSetFlags()[7] ? this.enWikiTitle : (java.lang.String) defaultValue(fields()[7]);
        record.redirect =
            fieldSetFlags()[8] ? this.redirect : (java.lang.String) defaultValue(fields()[8]);
        record.paragraphs =
            fieldSetFlags()[9]
                ? this.paragraphs
                : (java.util.List<java.lang.String>) defaultValue(fields()[9]);
        record.sections =
            fieldSetFlags()[10]
                ? this.sections
                : (java.util.List<java.lang.String>) defaultValue(fields()[10]);
        record.highlights =
            fieldSetFlags()[11]
                ? this.highlights
                : (java.util.List<java.lang.String>) defaultValue(fields()[11]);
        record.templatesSchema =
            fieldSetFlags()[12]
                ? this.templatesSchema
                : (java.util.List<java.lang.String>) defaultValue(fields()[12]);
        record.links =
            fieldSetFlags()[13]
                ? this.links
                : (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>)
                    defaultValue(fields()[13]);
        record.externalLinks =
            fieldSetFlags()[14]
                ? this.externalLinks
                : (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>)
                    defaultValue(fields()[14]);
        record.categories =
            fieldSetFlags()[15]
                ? this.categories
                : (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>)
                    defaultValue(fields()[15]);
        record.images =
            fieldSetFlags()[16]
                ? this.images
                : (java.util.List<it.cnr.isti.hpc.wikipedia.article.Link>)
                    defaultValue(fields()[16]);
        record.type =
            fieldSetFlags()[17]
                ? this.type
                : (it.cnr.isti.hpc.wikipedia.article.ArticleType) defaultValue(fields()[17]);
        record.tables =
            fieldSetFlags()[18]
                ? this.tables
                : (java.util.List<it.cnr.isti.hpc.wikipedia.article.Table>)
                    defaultValue(fields()[18]);
        record.lists =
            fieldSetFlags()[19]
                ? this.lists
                : (java.util.List<java.util.List<java.lang.String>>) defaultValue(fields()[19]);
        if (infoboxBuilder != null) {
          record.infobox = this.infoboxBuilder.build();
        } else {
          record.infobox =
              fieldSetFlags()[20]
                  ? this.infobox
                  : (it.cnr.isti.hpc.wikipedia.article.Template) defaultValue(fields()[20]);
        }
        record.templates =
            fieldSetFlags()[21]
                ? this.templates
                : (java.util.List<it.cnr.isti.hpc.wikipedia.article.Template>)
                    defaultValue(fields()[21]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter WRITER$ =
      new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override
  public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader READER$ =
      new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override
  public void readExternal(java.io.ObjectInput in) throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }
}
